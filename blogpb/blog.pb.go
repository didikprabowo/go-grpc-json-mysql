// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blogpb/blog.proto

package blogpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Article struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd072c3eda6f7ba, []int{0}
}

func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (m *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(m, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type CreateArticleRequest struct {
	Article              *Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateArticleRequest) Reset()         { *m = CreateArticleRequest{} }
func (m *CreateArticleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArticleRequest) ProtoMessage()    {}
func (*CreateArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd072c3eda6f7ba, []int{1}
}

func (m *CreateArticleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArticleRequest.Unmarshal(m, b)
}
func (m *CreateArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArticleRequest.Marshal(b, m, deterministic)
}
func (m *CreateArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArticleRequest.Merge(m, src)
}
func (m *CreateArticleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArticleRequest.Size(m)
}
func (m *CreateArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArticleRequest proto.InternalMessageInfo

func (m *CreateArticleRequest) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

type CreateArticleResponse struct {
	Article              *Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateArticleResponse) Reset()         { *m = CreateArticleResponse{} }
func (m *CreateArticleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArticleResponse) ProtoMessage()    {}
func (*CreateArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd072c3eda6f7ba, []int{2}
}

func (m *CreateArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArticleResponse.Unmarshal(m, b)
}
func (m *CreateArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArticleResponse.Marshal(b, m, deterministic)
}
func (m *CreateArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArticleResponse.Merge(m, src)
}
func (m *CreateArticleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArticleResponse.Size(m)
}
func (m *CreateArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArticleResponse proto.InternalMessageInfo

func (m *CreateArticleResponse) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

type ListArticleRequest struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArticleRequest) Reset()         { *m = ListArticleRequest{} }
func (m *ListArticleRequest) String() string { return proto.CompactTextString(m) }
func (*ListArticleRequest) ProtoMessage()    {}
func (*ListArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd072c3eda6f7ba, []int{3}
}

func (m *ListArticleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArticleRequest.Unmarshal(m, b)
}
func (m *ListArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArticleRequest.Marshal(b, m, deterministic)
}
func (m *ListArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArticleRequest.Merge(m, src)
}
func (m *ListArticleRequest) XXX_Size() int {
	return xxx_messageInfo_ListArticleRequest.Size(m)
}
func (m *ListArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArticleRequest proto.InternalMessageInfo

func (m *ListArticleRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListArticleResponse struct {
	Article              *Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArticleResponse) Reset()         { *m = ListArticleResponse{} }
func (m *ListArticleResponse) String() string { return proto.CompactTextString(m) }
func (*ListArticleResponse) ProtoMessage()    {}
func (*ListArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd072c3eda6f7ba, []int{4}
}

func (m *ListArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArticleResponse.Unmarshal(m, b)
}
func (m *ListArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArticleResponse.Marshal(b, m, deterministic)
}
func (m *ListArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArticleResponse.Merge(m, src)
}
func (m *ListArticleResponse) XXX_Size() int {
	return xxx_messageInfo_ListArticleResponse.Size(m)
}
func (m *ListArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArticleResponse proto.InternalMessageInfo

func (m *ListArticleResponse) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func init() {
	proto.RegisterType((*Article)(nil), "blog.Article")
	proto.RegisterType((*CreateArticleRequest)(nil), "blog.CreateArticleRequest")
	proto.RegisterType((*CreateArticleResponse)(nil), "blog.CreateArticleResponse")
	proto.RegisterType((*ListArticleRequest)(nil), "blog.ListArticleRequest")
	proto.RegisterType((*ListArticleResponse)(nil), "blog.ListArticleResponse")
}

func init() { proto.RegisterFile("blogpb/blog.proto", fileDescriptor_1cd072c3eda6f7ba) }

var fileDescriptor_1cd072c3eda6f7ba = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xca, 0xc9, 0x4f,
	0x2f, 0x48, 0xd2, 0x07, 0x51, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x92,
	0x33, 0x17, 0xbb, 0x63, 0x51, 0x49, 0x66, 0x72, 0x4e, 0xaa, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x8a,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x53, 0x66, 0x8a, 0x90, 0x08, 0x17, 0x6b, 0x49, 0x66,
	0x49, 0x4e, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x23, 0x24, 0xc4, 0xc5, 0x92,
	0x94, 0x9f, 0x52, 0x29, 0xc1, 0x0c, 0x16, 0x04, 0xb3, 0x95, 0xec, 0xb9, 0x44, 0x9c, 0x8b, 0x52,
	0x13, 0x4b, 0x52, 0xa1, 0x46, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xa9, 0x73, 0xb1,
	0x27, 0x42, 0x44, 0xc0, 0xc6, 0x72, 0x1b, 0xf1, 0xea, 0x81, 0x1d, 0x00, 0x53, 0x06, 0x93, 0x55,
	0x72, 0xe0, 0x12, 0x45, 0x33, 0xa0, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x95, 0x78, 0x13, 0x34, 0xb8,
	0x84, 0x7c, 0x32, 0x8b, 0x4b, 0xd0, 0x1c, 0x20, 0xc4, 0xc5, 0x52, 0x90, 0x98, 0x9e, 0x0a, 0xf5,
	0x14, 0x98, 0xad, 0x64, 0xc7, 0x25, 0x8c, 0xa2, 0x92, 0x44, 0x9b, 0x8c, 0xe6, 0x32, 0x72, 0x71,
	0x07, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0xfa, 0x25, 0xe6, 0xa6, 0x0a, 0x79, 0x70, 0xf1, 0xa2,
	0xb8, 0x5d, 0x48, 0x0a, 0xa2, 0x11, 0x5b, 0x88, 0x48, 0x49, 0x63, 0x95, 0x83, 0x3a, 0xc1, 0x85,
	0x8b, 0x1b, 0xc9, 0x65, 0x42, 0x12, 0x10, 0xb5, 0x98, 0xde, 0x92, 0x92, 0xc4, 0x22, 0x03, 0x31,
	0xc3, 0x80, 0xd1, 0x89, 0x23, 0x8a, 0x0d, 0x12, 0xd9, 0x49, 0x6c, 0xe0, 0x88, 0x36, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x9b, 0x78, 0xa0, 0x5d, 0xfd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceNameClient is the client API for ServiceName service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceNameClient interface {
	// create
	CreateArticle(ctx context.Context, in *CreateArticleRequest, opts ...grpc.CallOption) (*CreateArticleResponse, error)
	// readall
	ListArticle(ctx context.Context, in *ListArticleRequest, opts ...grpc.CallOption) (ServiceName_ListArticleClient, error)
}

type serviceNameClient struct {
	cc *grpc.ClientConn
}

func NewServiceNameClient(cc *grpc.ClientConn) ServiceNameClient {
	return &serviceNameClient{cc}
}

func (c *serviceNameClient) CreateArticle(ctx context.Context, in *CreateArticleRequest, opts ...grpc.CallOption) (*CreateArticleResponse, error) {
	out := new(CreateArticleResponse)
	err := c.cc.Invoke(ctx, "/blog.ServiceName/CreateArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceNameClient) ListArticle(ctx context.Context, in *ListArticleRequest, opts ...grpc.CallOption) (ServiceName_ListArticleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceName_serviceDesc.Streams[0], "/blog.ServiceName/ListArticle", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceNameListArticleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServiceName_ListArticleClient interface {
	Recv() (*ListArticleResponse, error)
	grpc.ClientStream
}

type serviceNameListArticleClient struct {
	grpc.ClientStream
}

func (x *serviceNameListArticleClient) Recv() (*ListArticleResponse, error) {
	m := new(ListArticleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceNameServer is the server API for ServiceName service.
type ServiceNameServer interface {
	// create
	CreateArticle(context.Context, *CreateArticleRequest) (*CreateArticleResponse, error)
	// readall
	ListArticle(*ListArticleRequest, ServiceName_ListArticleServer) error
}

// UnimplementedServiceNameServer can be embedded to have forward compatible implementations.
type UnimplementedServiceNameServer struct {
}

func (*UnimplementedServiceNameServer) CreateArticle(ctx context.Context, req *CreateArticleRequest) (*CreateArticleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArticle not implemented")
}
func (*UnimplementedServiceNameServer) ListArticle(req *ListArticleRequest, srv ServiceName_ListArticleServer) error {
	return status.Errorf(codes.Unimplemented, "method ListArticle not implemented")
}

func RegisterServiceNameServer(s *grpc.Server, srv ServiceNameServer) {
	s.RegisterService(&_ServiceName_serviceDesc, srv)
}

func _ServiceName_CreateArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArticleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceNameServer).CreateArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.ServiceName/CreateArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceNameServer).CreateArticle(ctx, req.(*CreateArticleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceName_ListArticle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListArticleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceNameServer).ListArticle(m, &serviceNameListArticleServer{stream})
}

type ServiceName_ListArticleServer interface {
	Send(*ListArticleResponse) error
	grpc.ServerStream
}

type serviceNameListArticleServer struct {
	grpc.ServerStream
}

func (x *serviceNameListArticleServer) Send(m *ListArticleResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ServiceName_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.ServiceName",
	HandlerType: (*ServiceNameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArticle",
			Handler:    _ServiceName_CreateArticle_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListArticle",
			Handler:       _ServiceName_ListArticle_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "blogpb/blog.proto",
}
